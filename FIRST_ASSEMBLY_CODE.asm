;#Mode=DOS
.MODEL SMALL,C
.DATA
_A DB 21 DUP('$')
_B DB 31 DUP('$')
_C DB 21 DUP('$')
SH DB 0
STRING   DB  'No same!', 0DH,0AH,'$'
CRLF DB 0DH,0AH,24H
.CODE
.STARTUP
LEA SI,_A
MOV DL,0H
MOV BL,0

ENTER1:
MOV AH,01H
INT 21H
CMP AL,20H
JE FUNCTION2
CMP AL,0DH
JE FUNCTION1
SUB AL,30H
XCHG AL,BL
MOV CL,10
MUL CL
ADD BL,AL
MOV [SI],BL
JMP ENTER1:
       
FUNCTION2:
MOV BL,0
INC SI
JMP ENTER1
        
ENTER2:
MOV AH,01H
INT 21H
CMP AL,20H
JE FUNCTION3
CMP AL,0DH
JE FUNCTION
SUB AL,30H
XCHG AL,BL
MOV CL,10
MUL CL
ADD BL,AL
MOV [DI],BL
JMP ENTER2

FUNCTION3:
MOV BL,0
INC DI
JMP ENTER2      

FUNCTION1:
MOV AH,09
MOV DX,OFFSET CRLF
INT 21H
MOV BL,0
LEA DI,_B
JMP ENTER2

FUNCTION:
LEA SI,_A
LEA BX,_B
LEA DI,_C
MOV CX,13H ;控制外层循环
MOV DX,1EH ;控制内层循环
CYCLE1:
MOV AX,[SI]
CYCLE2:
CMP AX,[BX]
JNE NEXT     ;when(ZF=1),The progrom jump
MOV SP,1H
MOV DS:[DI],AX
INC DI
JMP NEXT1
NEXT:
INC BX
DEC DX
JNZ CYCLE2
NEXT1:
MOV DX,1EH
INC SI
LEA BX,_B
DEC CX
JNZ CYCLE1
JMP JUDGE

JUDGE:
CMP SP,1H
JE Line:
MOV AH,09
MOV DX,OFFSET CRLF
INT 21H
LEA DX,STRING   
MOV AH,09H      
INT 21H
JMP EXIT

Line:
MOV AH,09
MOV DX,OFFSET CRLF
INT 21H
LEA SI,_C
MOV BL,100
MOV SP,0
JMP BAI


PRINT_BAI:
MOV SP,1
MOV AH,2
ADD AL,30H
MOV DL,AL
INT 21H
SUB AL,30H
JMP SHI

PRINT_SHI:
MOV SP,1
ADD AL,30H
MOV AH,2
MOV DL,AL
INT 21H
SUB AL,30H
JMP GE

BAI:
CMP [SI],24H
JE EXIT
MOV AX,[SI]
MOV AH,0
DIV BL
MOV BH,AH
CMP AL,0
JNE PRINT_BAI

SHI:
MOV AH,0
MOV AL,BH
MOV BL,10
DIV BL
MOV BH,AH
CMP SP,1
JE PRINT_SHI
CMP AL,0
JNE PRINT_SHI

GE:
ADD BH,30H
MOV AH,2
MOV DL,BH
INT 21H
SUB BH,30H
INC SI
MOV BL,100
MOV AH,2
MOV DL,20H
INT 21H
MOV SP,0
JMP BAI


EXIT:
.EXIT 0
END